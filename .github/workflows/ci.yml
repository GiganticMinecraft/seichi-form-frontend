name: CI
on:
  workflow_call:
  pull_request:
    branches:
      - main
jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run ESLint
        run: yarn lint
  format:
    name: Run Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run Prettier
        run: yarn format
  test-jest:
    name: Run Test by Jest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Run coverage tests by Jest
        run: yarn test:coverage
      - name: Upload coverage result
        uses: actions/upload-artifact@v3
        with:
          name: jest-coverage
          path: coverage/result-jest.txt
  test-storybook:
    name: Run Test by Storybook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Build Storybook
        run: yarn sb:build
      - name: Serve Files
        uses: Eun/http-server-action@v1.0.6
        with:
          directory: storybook-static
          port: 9001
      - name: Run tests by Storybook
        run: yarn sb:test:run
      - name: Output coverage
        run: yarn nyc report --reporter=text -t coverage/storybook --report-dir coverage/storybook > coverage/result-storybook.txt
      - name: Upload coverage result
        uses: actions/upload-artifact@v3
        with:
          name: storybook-coverage
          path: coverage/result-storybook.txt
  summary-coverages:
    name: Write coverages to job summary
    runs-on: ubuntu-latest
    needs:
      - test-jest
      - test-storybook
    steps:
      - name: Download jest coverage
        uses: actions/download-artifact@v3
        with:
          name: jest-coverage
      - name: Edit result file
        id: jest
        run: |
          tail -n +2 result-jest.txt | head -n -1 > result.txt
          cov=$(cat result.txt)
          echo "coverage=$cov" >> $GITHUB_OUTPUT
      - name: Download storybook coverage
        uses: actions/download-artifact@v3
        with:
          name: storybook-coverage
      - name: Edit result file
        id: storybook
        run: |
          tail -n +4 result-storybook.txt | head -n -2 > result.txt
          cov=$(cat result.txt)
          echo "coverage=$cov" >> $GITHUB_OUTPUT
      - name: Write to summary
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `\n
              ## Jest\n\n
              ${{ steps.jest.outputs.result }}\n\n
              ## Storybook\n\n
              ${{ steps.storybook.outputs.result }}`;
            await core.summary
              .addHeading('Test Coverages')
              .addRaw(output)
              .write();
  build:
    name: Run Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Restore Next.js build cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Run build
        run: yarn build
      - name: Upload artifacts for GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out
